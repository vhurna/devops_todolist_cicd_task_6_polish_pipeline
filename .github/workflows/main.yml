name: CI/CD Pipeline

run-name: ${{ github.actor }} – ${{ github.ref_name }} – ${{ github.sha }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      artifact:
        description: 'Artifact to deploy (os-version)'
        required: true
        type: choice
        options:
          - ubuntu-3.8
          - ubuntu-3.9
          - windows-3.8
          - windows-3.9

env:
  DockerImageName: ${{ secrets.DOCKERHUB_USERNAME }}/todoapp

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  python-ci:
    strategy:
      matrix:
        PythonVersion: [3.8, 3.9]
        OsType: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.OsType }}
    concurrency:
      group: python-ci-${{ github.sha }}-${{ matrix.OsType }}-${{ matrix.PythonVersion }}
      cancel-in-progress: true
    defaults:
      run:
        working-directory: ./src
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.PythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.PythonVersion }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r requirements.txt
      - name: Run tests
        run: python manage.py test
      - name: Coverage report
        run: |
          coverage run --source='.' manage.py test
          coverage report
      - name: Lint & complexity
        run: |
          flake8 . --show-source --statistics --exit-zero --max-complexity=6
      - uses: actions/upload-artifact@v4
        name: Upload python artifact
        with:
          name: python-artifacts-${{ matrix.OsType }}-${{ matrix.PythonVersion }}
          path: src

  docker-ci:
    name: Build & Push Docker image
    if: ${{ github.ref_name == 'main' }}
    needs: python-ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: ./src
          push: true
          tags: ${{ env.DockerImageName }}:${{ github.sha }}

  deploy-kind-dev:
    name: Deploy to Development (Kind)
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: docker-ci
    uses: ./.github/workflows/reusable-deployment.yml
    secrets: inherit
    with:
      environment: development
      artifact: ${{ github.event.inputs.artifact }}

  deploy-kind-staging:
    name: Deploy to Staging (Kind)
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: deploy-kind-dev
    uses: ./.github/workflows/reusable-deployment.yml
    secrets: inherit
    with:
      environment: staging
      artifact: ${{ github.event.inputs.artifact }}
